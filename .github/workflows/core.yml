name: Core
on:
  - push

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        node:
          - 14.x
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/setup-node@v1
        name: Set up node
        with:
          node-version: ${{ matrix.node }}
          registry-url: https://npm.pkg.github.com/alorel
      - name: Set up yarn
        run: npm install -g yarn@^2.0.0-rc.27
      - name: Install deps
        run: yarn install --immutable
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Lint
        run: yarn run lint
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
#          - windows-latest
#          - macos-latest
          - ubuntu-latest
        node:
          - 14.x
          - 12.x
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/setup-node@v1
        name: Set up node
        with:
          node-version: ${{ matrix.node }}
          registry-url: https://npm.pkg.github.com/alorel
      - name: Set up yarn
        run: npm install -g yarn@^2.0.0-rc.27
      - name: Install deps
        run: yarn install --immutable
        env:
          YARN_ENABLE_GLOBAL_CACHE: 'false'
          YARN_NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Test
        run: yarn run test --forbid-only --forbid-pending
      - name: Upload coverage
        if: ${{ matrix.os != 'windows-latest' }}
        continue-on-error: true
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: node-${{ matrix.node }}-on-${{ matrix.os }}
          parallel: true
  posttest:
    runs-on: ubuntu-latest
    needs: test
    continue-on-error: true
    steps:
      - name: Finalise coverage report
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
  release:
    runs-on: ${{ matrix.os }}
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - lint
      - test
    strategy:
      matrix:
        os:
          - ubuntu-latest
        node:
          - 14.x
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 100
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node }}-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/setup-node@v1
        name: Set up node
        with:
          node-version: ${{ matrix.node }}
          registry-url: https://npm.pkg.github.com/alorel
      - name: Set up yarn
        run: npm install -g yarn@^2.0.0-rc.27
      - name: Install deps
        run: yarn install --immutable
        env:
          YARN_ENABLE_GLOBAL_CACHE: 'false'
          YARN_NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        run: yarn run release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
